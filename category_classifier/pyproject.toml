[tool.poetry]
name = "category_classifier"
version = "0.0.1"
description = "Category Classifier"
readme = "README.md"
authors = ["Alicja Rączkowska <alicja.raczkowska@allegro.com>", "Aleksandra Osowska-Kurczab <aleksandra.kurczab@allegro.com>", "Jacek Szczerbiński <jacek.szczerbinski@allegro.com>", "Kalina Jasinska-Kobus <kalina.kobus@allegro.com>", "Klaudia Nazarko <klaudia.nazarko@allegro.com>"]


[tool.poetry.dependencies]
python =  "~3.10.12"
torch = "1.13.1"
pytorch-lightning = "~1.5.0"
gcsfs = "2023.1.0"
fsspec = "2023.1.0"
transformers = "4.25.1"
numpy = "1.23.5"
scikit-learn = "1.2.2"
PyYAML = "^6.0"
tokenizers = "~0.11.0"
pandas = "1.5.3"
attrs = "^21.4.0"
setuptools = "59.5.0"
python-etcd = "^0.4.5"
mlflow = "1.30.0"
tensorboard = "^2.11.0"
protobuf = ">=3.12.0"
sacremoses = "0.0.53"


[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
flake8 = "4.0.1"
flakeheaven = "^0.11.0"
pytest = "7.1.2"
dephell = "^0.8.3"
mistune = "0.8.4"
docutils = "<0.19"
mypy = "^0.931"
mock = "^4.0.3"

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
/(
  | \.git
  | \.github
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | \.idea
  | setup.py
  | \venv
)/
| setup.py
'''

[tool.flakeheaven]
exclude = ["README.md"]
# make output nice
format = "grouped"
# 80 chars aren't enough in 21 century
max_line_length = 120
# show line of source code in output
show_source = true
inline-quotes = "double"

[tool.flakeheaven.plugins]
# enable everything that starts from `flake8-`
"flake8-*" = ["+*", "-E203", "-W503", "-C416", "-D*", "-S*", "-RST*", "-DAR*", "-Q000", "-C812", "-E800", "-S101", "-C408"]

[tool.isort]
default_section = "THIRDPARTY"
known_first_party = "pcs_category_classifier"
py_version = "37"
line_length = 120
ensure_newline_before_comments = true
lines_after_imports = 2
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = true
use_parentheses = true
skip = [
    ".git",
    ".github",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    ".idea",
    "setup.py",
    "venv"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
